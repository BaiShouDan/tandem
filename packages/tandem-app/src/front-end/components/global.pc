<!-- TODOS:

-->
<!--link rel="stylesheet" type="text/css" href="http://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" /-->

<style>
  * {
    box-sizing: border-box;
  }
  :root {
    --base: 2;
    --base2: 4;
    --base3: 6;
    --base4: 8;
    --base6: 10;
    --base8: 12;
    --base10: 14;
    --base11: 16;
    --font-size-rg: 12px;
    --font-size-md: 18px;
    --font-size-lg: 24px;
    --font-size-sm: 8px;
    --font-color: #777;
    --font-color-alt: #999;
    --font-color-dim: #CCC;
    --font-color-light: rgba(255, 255, 255, 0.9);
    --background: #FCFCFC;
    --background-alt: #F9F9F9;
    --border-color: #ECECEC;
    --border-color-deep: #D9D9D9;
    --background-accent: #F4F4F4;
    --background-deep: #E9E9E9;
    --background-bold: #EFEFEF;
    --background-highlight: #00B5FF;
    --background-overlay: rgba(255, 255, 255, 0.7);
  }

  body, html {
    font-family: Helvetica;
    margin: 0;
    padding: 0;
    font-size: var(--font-size-rg);
    color: var(--font-color);
  }
</style>

<component id="td-list" label="List">
  <template>
    <span>
      <slot>children here</slot>
    </span>
  </template>
</component>

<component id="td-preview-component-example" hidden>
  <property name="label" />
  <style>
    :host {
      width: 250px;
      margin: var(--base4);
      position: relative;
      float: left;
    }

    h3 {
      margin: 0px;
    }
  </style>
  <template>
    <h3>{{this.label}}</h3>
    <slot></slot>
  </template>
</component>

<component id="td-list-item" label="List Item">
  <property name="count" type="number" default={{0}} />
  <property name="mouseOver" type="number" default={{false}} />
  <style>
    :host {
      background: var(--background);
      border-bottom: 1px solid var(--border-color);
      padding: var(--base6) var(--base8);
      display: block;
    }
    :host(:last-child) {
      border-bottom: 0;
    }
    :host(:nth-child(2n)) {
      background: var(--background-alt);
    }
  </style>
  <template>
    <slot></slot>
  </template>
</component>

<component id="td-progress">
  <property name="value" default={{0}} />
  <style>
    :host {
      display: block;
    }
    
    .fill {
      height: 20px;
      background: red;
      border-radius: 10px;
      position: relative;
      transition: all 0.2s ease;
    }
    .background {
      width: 100%;
      display: inline-block;
      background: blue;
      border-radius: 100px;
      position: relative;
    }
    
    span {
      color: var(--font-color-light);
      position: absolute;
      left: var(--base4);
      top: 50%;
      transform: translateY(-50%);
    }
  </style>
  <template>
    <div class="background">
      <div class="fill" style={{{width: (this.value * 100) + "%" }}}>
      </div>
      <span><slot></slot></span>
    </div>
  </template>
</component>

<component id="td-banner">
  <style>
    :host {
      padding: var(--base4);
      display: block;
    }

    :host([warning]) {
      background: yellow;
    }

    :host([error]) {
      color: var(--font-color-light);
      background: red;
    }

    :host([success]) {
      color: var(--font-color-light);
      background: blue;
    }
  </style>
  <template>
    <slot></slot>
  </template>
</component>

<component id="td-draggable">
  <property name="onDrag" default={{noop}} />
  <property name="restrict" />
  <script>
    const onMouseDown = (event) => {

      const draggableRect = this.children[0].getBoundingClientRect();
      const { restrict = "viewport" } = this;

      const { deltaX, deltaY } = restrict === "self" ? {
        deltaX: 0,
        deltaY: 0
      } : {
        deltaX: draggableRect.left - event.clientX,
        deltaY: draggableRect.top - event.clientY
      };
      
      const onMouseUp = (event) => {
        document.removeEventListener("mouseup", onMouseUp, true);
        document.removeEventListener("mousemove", onMouseMove);
      };

      const onMouseMove = (event) => {

        const bounds = restrict === "parent" ? this.parentElement.getBoundingClientRect() : restrict === "self" ? draggableRect : {
          left: 0,
          top: 0,
          width: window.innerWidth,
          height: window.innerHeight
        };

        const relativeLeft = Math.max(0, Math.min(bounds.width, event.clientX - bounds.left + deltaX));
        const relativeTop = Math.max(0, Math.min(bounds.height, event.clientY - bounds.top + deltaY));

        this.onDrag(event, {
          left: relativeLeft,
          top: relativeTop
        }, bounds);
      };

      onMouseMove(event);

      document.addEventListener("mouseup", onMouseUp, true);
      document.addEventListener("mousemove", onMouseMove);
    }
  </script>
  <template>
    <slot onmousedown={{onMouseDown}}></slot>
  </template>
</component>

<component id="td-progress-example">
  <property name="value" default={{0}} />
  <style>
    td-progress {
      margin: var(--base4);
    }
  </style>
  <script>
    let interval;
    this.didMount = () => {
      if (this.live) {
        interval = setInterval(() => {
          this.value = (this.value + 0.01) % 1;
        }, 100);
      }
    }

    this.willUnmount = () => {
      clearInterval(interval);
    }
  </script>
  <property name="value" default={{0}} />
  <template>
    <td-progress value={{this.value}}>{{Math.round(this.value * 100)}}%</td-progress>
  </template>
</component>

<td-preview>
  <td-preview-component-example label="List">
    <td-list>
      <td-list-item>List item 1</td-list-item>
      <td-list-item>Item 2</td-list-item>
      <td-list-item>Item 3</td-list-item>
      <td-list-item>Item 4</td-list-item>
    </td-list>
  </td-preview-component-example>

  <td-preview-component-example label="Banner">
    <style>
      td-banner {
        margin: var(--base4);
      }
    </style>
    <td-banner success>Success</td-banner>
    <td-banner warning>Warning</td-banner>
    <td-banner error>Error</td-banner>
  </td-preview-component-example>

  <td-preview-component-example label="Progress">
    <td-progress-example value={{0}} />
    <td-progress-example value={{0.5}} />
    <td-progress-example value={{1}} />
  </td-preview-component-example>
</td-preview>

</td-preview>



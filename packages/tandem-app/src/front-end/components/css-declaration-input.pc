<link rel="import" href="./global.pc" />
<link rel="import" href="./pane.pc" />
<link rel="import" href="./gutter.pc" />
<link rel="import" href="./tooltip.pc" />
<link rel="import" href="./color-picker.pc" />

<component id="td-css-color-expr-input" [[property expr]] [[property dispatch]]>
  <style>
    .input-box {
      width: var(--base4);
      height: var(--base4);
      margin: 0px var(--base2);
      position: relative;
      top: 1px;
      display: inline-block;
      border-radius: 2px;
      border: 1px solid rgba(0,0,0,0.3);
    }
  </style>
  <template>
    <td-color-mini-input value=[[bind expr.value]] dispatch=[[bind dispatch]] />
    <span>[[bind expr.value]]</span>
  </template>
</component>

<component id="td-keyword-expr-input" [[property expr]]>
  <template>
    <span>[[bind expr && expr.name]]</span>
  </template>
</component>

<component id="td-css-number-expr-input" [[property expr]]>
  <style>
    .input-box {
      width: var(--base4);
      height: var(--base4);
      margin: 0px var(--base2);
      position: relative;
      top: 1px;
      display: inline-block;
      border-radius: 2px;
      border: 1px solid rgba(0,0,0,0.3);
    }
  </style>
  <template>
    <span>[[bind expr && expr.value]]</span>
  </template>
</component>

<component id="td-color-mini-input" [[property value]] [[property dispatch]]>
  <style>
    .input-box {
      width: var(--base4);
      height: var(--base4);
      margin: 0px var(--base2);
      background: red;
      position: relative;
      top: 1px;
      display: inline-block;
      border-radius: 2px;
      border: 1px solid rgba(0,0,0,0.3);
    }
  </style>
  <template>
    <td-tooltip>
      <div slot="button" class="input-box" style=[[bind { background: value }]] /> 

      <!-- TODO - fix me - super slow -->
      <!-- need to not render this until slot is present -->
      <td-color-picker value=[[bind value]] dispatch=[[bind dispatch]] />
    </td-tooltip>
  </template>
</component>

<component id="td-css-call-expr-input" [[property expr]] [[property dispatch]]>
  <style>
    td-css-expr-input::after {
      content: ", ";
    }

    td-css-expr-input:last-of-type::after {
      content: "";
    }
  </style>
  <template>
    <td-color-mini-input [[if expr.name === "rgb" || expr.name === "rgba"]]  expr=[[bind expr]] dispatch=[[bind dispatch]] /> 
    <span>[[bind expr.name]](</span>
      <td-css-expr-input [[repeat expr.params as param]] context=[[bind expr]] expr=[[bind param]] dispatch=[[bind dispatch]] />
    <span>)</span>
  </template>
</component>

<component id="td-css-expr-input" [[property expr]] [[property context]] [[property dispatch]]>
  <style>
    :host {
      display: inline;
    }
  </style>
  <template>
    <td-css-call-expr-input [[if expr && expr.type === "CALL"]] expr=[[bind expr]]  dispatch=[[bind dispatch]] />
    <td-css-color-expr-input [[elseif expr && expr.type === "COLOR"]] expr=[[bind expr]]  dispatch=[[bind dispatch]]  />
    <td-css-number-expr-input [[elseif expr && expr.type === "NUMBER"]] expr=[[bind expr]]  dispatch=[[bind dispatch]]  />
    <td-keyword-expr-input [[elseif expr && expr.type === "KEYWORD"]] context=[[bind context]] expr=[[bind expr]] dispatch=[[bind dispatch]] />
    <span [[else]]>
      [[bind expr && expr.value]]
    </span>
  </template>
</component>

<component id="td-css-expr-input-example" [[property valueExpr]][[property dispatch]]>
  <template>
    <td-css-expr-input open=[[bind open]] expr=[[bind valueExpr]] dispatch=[[bind dispatch]] />
  </template>
</component>
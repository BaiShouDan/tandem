Notes about this doc:

- Checklist items are ordered by importance.
- Remove a checklist item when it's completed.

Focus:

- more on visual tools - writing CSS tools 
- look for top Css tools - implement those


----------------------------------
IMMEDIATE
----------------------------------


Start working on UX around getting started with Tandem and projects.

Messaging:

TODO - strip of all functionality that does not work all the time - need to
resolve UX. May want to optimize experience around writing code.

NEW TARGET: Dev tools - qa testing. Develop

- word press

- [ ] context menu
  - [ ] right click - open link in new window
  - [ ] right click inspect element

- [ ] Getting started video popup
- [ ] bark for unsaved changes

- test
  - https://github.com/facebookincubator/create-react-app

- [ ] Show unsaved files
- [ ] result style css urls
- [ ] proper source mapping for html loader

- [ ] Core
  - [ ] ensure that location changes are observable

- [ ] UX
  - [ ] ability to define location
  - [ ] server config that maps where files are
  
- [ ] BUGS
  - [ ] canvas still misalaigned
  - [ ] height seems to be inherited
    child class must contain parent class - e.g: .header .title, where .header contains the height prop 
  - [ ] source maps not working with React
  - [ ] elements with padding & margin jump around when dragging assuming that the element pos is absolute
  - [ ] cannot dynamically add <script /> tags since dependency graph doesn't load that stuff in 
  - [ ] need to unwatch sources that have been deleted. Try removing an artboard, then deleting the source linked to it.
  - [ ] artboards do not show up if there's an error in the load

- [ ] Editor
  - [ ] History
  - [ ] unsaved files pane
  - [ ] install CLI tools menu option
  - [ ] react starter project

- [ ] Getting Started page
  - [ ] big header explaining how to zoom & use tools

- [ ] Stability
  - [ ] analytics on usage
  - [ ] auto updater
  - [ ] account for infinite loops in code

- [ ] top bar
- [ ] rotate artboard button
- [ ] scrolling artboards (alt key?) 
  - [ ] need usage report prompt
  - [ ] extensions


----------------------------------
NOTES
----------------------------------

- [ ] tandem must have full UI editing capabilities. Too much context switching between code & design

----------------------------------
LAUNCHING
----------------------------------

WEBSITE
  - [ ] cross-browser testing demo (show same browser window with different icons

CORE
  - [ ] wire up auto updater

----------------------------------
STABILITY
----------------------------------

DOCS
  - [ ] browser compatibility table (what you can & cannot currently do in Tandem)

UX
  - [ ] *"LIVE" button that loads the application up in an iframe in the client

  - [ ] launch tandem from vscode
  - [ ] display title of document (if present)
  - [ ] VM developer console
  - [ ] gutters need to be resizable
  - [ ] input focus border
  - [ ] multi drag
  - [ ] minimap (can also be done by opening up a new window of tandem)
  - [ ] incompatible browser notification

TESTING
 - [ ] test various webpack configs
 - [ ] use various websites as fixtures

BUGS
  - [ ] prevent copy & paste html elements in css inspector
  - [ ] cannot resize artboard to 0/0 width/height
  - [ ] do not resolve full path for html ext - causing issues when copying & pasting - use relative path instead
  - [ ] css class selectors are case insensitive
  - [ ] disable attributes that are dynamically created (React for instance)
  - [ ] fix absolute bounds for elements
  - [ ] cannot change source of artboard
  - [ ] cannot rapidly change .tsx? documents
  - [ ] pseudo elements (::before) fooing with override flags
  - [ ] css changes don't immediately get reflected in text editor
  - [ ] rebundle when file name changes. App locks up when file not found
  - [ ] Kill remotely dispatched messages if there are no responses.

ARCHITECTURE
  - [ ] db oplog tailing
  - [ ] artboard should define window size

CLEANUP
  - [ ] do not use absolute paths for dependency graphs
  - [ ] custom protocol handling
  - [ ] Consider moving sandbox JS and html functionality into synthetic-browser

----------------------------------
FEATURES
----------------------------------

CORE
  - *[ ] right click context menu
    - [ ] edit text
    - [ ] inspect element (necessary to see rendered output)
  - [ ] send all mutations back to server, but don't save
  - [ ] *wait for all XHR requests to be completed before sending diff - (flickering otherwise)
  - [ ] config for scanning application for components
  - [ ] support css imports
  - [ ] Style declaration should use CWD in urls when stringifying
  - [ ] ability to dynamically add dependencies to the dependency graph -- required for stuff like systemjs.

- [ ] Editor
  - [ ] Debugger Pane
  - [ ] eye dropper
  - [ ] Settings page
    - [ ] where main editor bin is

  - [ ] CSS pane
    - [ ] up/down arrows for inputs
    - [ ] background image
    - [ ] Typography
      - [ ] Fallback font options
    - [ ] custom color picker
    - [ ] force state (hover, checked, etc.)
    - [ ] unit value converter

  - [ ] top bar
    - [ ] paint bucket tool
    - [ ] share workspace
    - [ ] artboard tool
    - [ ] share session tool
    
  - [ ] dnd url from browser
  - [ ] dnd images
  
  - [ ] artboard pane
    - [ ] pop artboards out in new window

  - [ ] media query pane
    - [ ] attached to each artboard

  - [ ] unsaved files
    - [ ] show diff of unsaved drafts

- [ ] Tech Debt
  - [ ] move core html-extension files to synthetic-browser
  - [ ] tests are coupled to webpack config
  
- [ ] Optimizations
  - [ ] store workspaces in data store
  - [ ] tree shaking dependencies
  - [ ] run VM code in a new worker for speed and to prevent mem leaks
  - [ ] connect studio with git repo of extensions
  - [ ] sync dropbox account with service for computing code online and sending diffs back

- [ ] a/b testing framework

BROWSERTAP INTEGRATION
  - [ ] rendering engine adapter for synthetic browsers to support IE, chrome, and other browsers
